outputFolder=fullfile('C:\Users\Owner\Desktop\Image Classification by cnn\Fish Diseases\XYZ');
rootFolder=fullfile(outputFolder,'Fish');
categories={'1-XYZ-EUS','2-XYZ-ICH','3-XYZ-columnaris','4-XYZ-NormalFish'};
imds=imageDatastore(fullfile(rootFolder,categories),'LabelSource','foldernames');


tb1=countEachLabel(imds);
minSetCount=min(tb1{:,2});

imds=splitEachLabel(imds,minSetCount,'randomize');
countEachLabel(imds);

EUS=find(imds.Labels=='1-XYZ-EUS',1);
ICH=find(imds.Labels=='2-XYZ-ICH',1);
NormalFish=find(imds.Labels=='4-XYZ-NormalFish',1);
columnaris=find(imds.Labels=='3-XYZ-columnaris',1);
figure
subplot(2,2,1);
imshow(readimage(imds,EUS));
subplot(2,2,2);
imshow(readimage(imds,ICH));
subplot(2,2,3);
imshow(readimage(imds,columnaris));
subplot(2,2,4);
imshow(readimage(imds,NormalFish));
[imdsTrain] = splitEachLabel(imds,0.9,'randomized');

net = alexnet
net.Layers
analyzeNetwork(net)
imageSize=net.Layers(1).InputSize;
augimdsTrain = augmentedImageDatastore(imageSize,imdsTrain);
layer = 'fc7';

featuresTrain = activations(net,augimdsTrain,layer,'OutputAs','rows');
YTrain = imdsTrain.Labels;
classifier = fitcecoc(featuresTrain,YTrain);
layers = [ ...
    imageInputLayer([227 227 3])
    
    convolution2dLayer(5,20)
    reluLayer
    maxPooling2dLayer(2,'Stride',2)
    fullyConnectedLayer(4)
    softmaxLayer
    classificationLayer];



options = trainingOptions('sgdm', ...
    'MiniBatchSize',10, ...
    'MaxEpochs',10, ...
    'InitialLearnRate',1e-3, ...
    'Plots','training-progress');
trainedNet = trainNetwork(augimdsTrain,layers,options);



save classifier;
D = 'C:\Users\Owner\Desktop\Image Classification by cnn\Fish Diseases\XYZ\XYZTest';


S = dir(fullfile(D,'*.png'));
 accuracy=1;
for k = 1:numel(S)
   
     F = fullfile(D,S(k).name);
   
    newImage = imread(F);
    imshow(newImage);
    
  
    
    ds=augmentedImageDatastore(imageSize,...
newImage);

imageFeatures=activations(net,...
    ds,layer,'OutputAs','columns');

label=predict(classifier,imageFeatures,'ObservationsIn','columns');

sprintf('The loaded image belongs to %s class',label)

name=S(k).name;
newChr = extractBetween(name,1,1);










if(strcmp(string(label),'1-XYZ-EUS')&&isequal(string(newChr),'2'))
      
accuracy=accuracy+1;

elseif (strcmp(string(label),'2-XYZ-ICH')&&isequal(string(newChr),'3'))
   
accuracy=accuracy+1;

elseif (strcmp(string(label),'3-XYZ-columnaris')&&isequal (string(newChr),'1'))
accuracy=accuracy+1 ;


elseif(strcmp(string(label),'4-XYZ-NormalFish')&&isequal(string(newChr),'4'))
accuracy=accuracy+1 ;


end

end
 disp('Accuracy')
 disp((accuracy/314)*100)
